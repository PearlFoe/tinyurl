version: '3.9'

services:
  server:
    container_name: app
    entrypoint: ["bash", "/app/run_app.sh"]
    build:
      context: .
    ports:
      - 8000:8000
    env_file:
      - "secrets/.env"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy

  db:
    image: postgres:16.1-alpine
    container_name: db
    hostname: db
    restart: unless-stopped
    volumes:
      - "db-data:/var/lib/postgresql/data"
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - "secrets/.env"

  cache:
    image: redis:7.2-alpine
    container_name: cache
    hostname: cache
    restart: unless-stopped
    command: redis-server --requirepass $$REDIS_PASSWORD
    volumes:
      - "cache-data:/var/lib/redis/data"
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - "secrets/.env"


volumes:
  db-data:
  cache-data: